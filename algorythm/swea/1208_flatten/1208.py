'''
[제약 사항]
가로 길이는 항상 100으로 주어진다.
모든 위치에서 상자의 높이는 1이상 100이하로 주어진다.
덤프 횟수는 1이상 1000이하로 주어진다.
주어진 덤프 횟수 이내에 평탄화가 완료되면 더 이상 덤프를 수행할 수 없으므로 그 때의 최고점과 최저점의 높이 차를 반환한다 (주어진 data에 따라 0 또는 1이 된다).

[입력]
총 10개의 테스트 케이스가 주어지며, 각 테스트 케이스의 첫 번째 줄에는 덤프 횟수가 주어진다. 그리고 다음 줄에 각 상자의 높이값이 주어진다.

[출력]
#부호와 함께 테스트 케이스의 번호를 출력하고, 공백 문자 후 테스트 케이스의 최고점과 최저점의 높이 차를 출력한다.
'''

import sys
sys.stdin = open('input.txt','r')

T = 10 # 10개의 테스트케이스
for test_case in range(1,T+1): #출력 편하게 하려고 1,T+1로 레인지 생성
    dumpcnt = int(input()) # 총 덤프 횟수 입력
    boxlist = list(map(int,input().split())) # 각 박스의 높이를 리스트의 형태로 저장
    while dumpcnt > 0: #반복문 시작! 덤프 횟수가 끝날때까지,
        boxlist.sort() # 박스들을 높이순으로 정렬
        if boxlist[0] == boxlist[-1]: # 평탄화가 끝나면 break
            break
        boxlist[0] += 1 # 가장 낮은거 +1
        boxlist[-1] -= 1 # 가장 높은거 -1
        dumpcnt -= 1 #덤프 횟수 -1
    boxlist.sort()    #마지막에 한번더 정렬해주고
    print(f'#{test_case} {boxlist[-1] - boxlist[0]} ')    #출력!